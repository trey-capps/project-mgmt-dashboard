name: Debug OIDC Token

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  debug-oidc:
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Required for OIDC token retrieval
      contents: read

    steps:
      # Step 1: Retrieve the OIDC Token

      - name: Fetch and Display OIDC Token
        run: |
          OIDC_JWT=$(curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r .value)
          echo "Raw OIDC Token: $OIDC_JWT"
          echo $OIDC_JWT | awk -F '.' '{print "Header: "$1"\nPayload: "$2"\nSignature: "$3}'

      - name: Request OIDC Token
        run: |
          echo "Requesting OIDC token..."
          OIDC_JWT=$(curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r .value)
          echo "OIDC Token: $OIDC_JWT"

      # Step 2: Decode the JWT Header
      - name: Decode JWT Header
        run: |
          echo "Decoding JWT Header..."
          OIDC_JWT=$(curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r .value)
          HEADER=$(echo "$OIDC_JWT" | cut -d "." -f1 | base64 -d)
          echo "Header: $HEADER"

      # Step 3: Decode the JWT Payload
      - name: Decode JWT Payload
        run: |
          echo "Decoding JWT Payload..."
          OIDC_JWT=$(curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r .value)
          PAYLOAD=$(echo "$OIDC_JWT" | cut -d "." -f2 | base64 -d)
          echo "Payload: $PAYLOAD"

      # Step 4: Debug Environment Variables
      - name: Debug Environment Variables
        run: |
          echo "OIDC Token Request URL: $ACTIONS_ID_TOKEN_REQUEST_URL"
          echo "OIDC Token Request Token: $ACTIONS_ID_TOKEN_REQUEST_TOKEN"